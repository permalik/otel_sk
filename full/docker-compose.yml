services:
  banyandb:
    image: apache/skywalking-banyandb:latest
    container_name: banyandb
    command: standalone
    ports:
      - "17912:17912" # gRPC
      - "17913:17913" # HTTP (optional)
    networks:
      - skywalking-net
  oap:
    image: apache/skywalking-oap-server:10.2.0
    container_name: oap
    restart: always
    environment:
      SW_STORAGE: banyandb
      SW_STORAGE_BANYANDB_TARGETS: banyandb:17912
    depends_on:
      - banyandb
    ports:
      - "11800:11800" # gRPC for agents
      - "12800:12800" # HTTP REST API
    networks:
      - skywalking-net
  ui:
    image: apache/skywalking-ui:10.2.0
    container_name: skywalking-ui
    environment:
      SW_OAP_ADDRESS: http://oap:12800
    ports:
      - "8081:8080"
    depends_on:
      - oap
    networks:
      - skywalking-net
  # fluent-bit:
  #   image: fluent/fluent-bit:2.2
  #   container_name: fluent-bit
  #   volumes:
  #     - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
  #     - ./logs:/logs:ro
  #   depends_on:
  #     - python-app
  #   networks:
  #     - skywalking-net
  # otel-collector:
  #   image: otel/opentelemetry-collector-contrib:latest
  #   container_name: otel-collector
  #   volumes:
  #     - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #   command: ["--config=/etc/otel-collector-config.yaml"]
  #   depends_on:
  #     - fluent-bit
  #     - oap
  #   ports:
  #     - "4317:4317" # OTLP gRPC
  #   networks:
  #     - skywalking-net
  app:
    build:
      context: ./opentelemetry-java-examples-main/javaagent
      dockerfile: Dockerfile
    environment:
      OTEL_SERVICE_NAME: "agent-example-app"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://collector:4318/v1/traces"
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "http://collector:4318/v1/metrics"
      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "http://collector:4318/v1/logs"
      # Logs are disabled by default
      OTEL_LOGS_EXPORTER: "otlp"
      # Optional specify file configuration instead of using environment variable scheme
      # To use, call "export OTEL_EXPERIMENTAL_CONFIG_FILE=/sdk-config.yaml" before calling docker compose up
      OTEL_EXPERIMENTAL_CONFIG_FILE:
    ports:
      - "8080:8080"
    volumes:
      - ./opentelemetry-java-examples-main/javaagent/sdk-config.yaml:/opentelemetry-java-examples-main/javaagent/sdk-config.yaml

    depends_on:
      - collector
      - oap
      - banyandb
    networks:
      - skywalking-net
  collector:
    image: otel/opentelemetry-collector-contrib:0.131.1@sha256:c06aa6d7833e9a2b81c6c394d67e40ae9864edec8dca8a8e8552df1316c96d9b
    volumes:
      - ./opentelemetry-java-examples-main/javaagent/collector-config.yaml:/opentelemetry-java-examples-main/javaagent/collector-config.yaml
    command: ["--config=/collector-config.yaml"]
    expose:
      - "4318"
    ports:
      - "4318:4318"
    depends_on:
      - oap
    networks:
      - skywalking-net

networks:
  skywalking-net:
    driver: bridge

